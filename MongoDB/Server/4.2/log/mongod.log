2020-04-11T08:41:26.078+1000 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2020-04-11T08:41:39.143+1000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-04-11T08:41:39.156+1000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-04-11T08:41:39.158+1000 I  CONTROL  [main] Trying to start Windows service 'MongoDB'
2020-04-11T08:41:39.163+1000 I  CONTROL  [initandlisten] MongoDB starting : pid=17600 port=27017 dbpath=C:\React\MongoDB\Server\4.2\data 64-bit host=DESKTOP-I90PJGQ
2020-04-11T08:41:39.163+1000 I  CONTROL  [initandlisten] targetMinOS: Windows 7/Windows Server 2008 R2
2020-04-11T08:41:39.164+1000 I  CONTROL  [initandlisten] db version v4.2.5
2020-04-11T08:41:39.168+1000 I  CONTROL  [initandlisten] git version: 2261279b51ea13df08ae708ff278f0679c59dc32
2020-04-11T08:41:39.168+1000 I  CONTROL  [initandlisten] allocator: tcmalloc
2020-04-11T08:41:39.168+1000 I  CONTROL  [initandlisten] modules: enterprise 
2020-04-11T08:41:39.168+1000 I  CONTROL  [initandlisten] build environment:
2020-04-11T08:41:39.168+1000 I  CONTROL  [initandlisten]     distmod: windows-64
2020-04-11T08:41:39.168+1000 I  CONTROL  [initandlisten]     distarch: x86_64
2020-04-11T08:41:39.169+1000 I  CONTROL  [initandlisten]     target_arch: x86_64
2020-04-11T08:41:39.169+1000 I  CONTROL  [initandlisten] options: { config: "C:\Program Files\MongoDB\Server\4.2\bin\mongod.cfg", net: { bindIp: "127.0.0.1", port: 27017 }, service: true, storage: { dbPath: "C:\React\MongoDB\Server\4.2\data", journal: { enabled: true } }, systemLog: { destination: "file", logAppend: true, path: "C:\React\MongoDB\Server\4.2\log\mongod.log" } }
2020-04-11T08:41:39.452+1000 I  STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3304M,cache_overflow=(file_max=0M),session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress],
2020-04-11T08:41:49.426+1000 I  STORAGE  [initandlisten] WiredTiger message [1586558508:966755][17600:140713364446800], txn-recover: Set global recovery timestamp: (0, 0)
2020-04-11T08:41:52.416+1000 I  RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2020-04-11T08:42:02.445+1000 I  STORAGE  [initandlisten] Timestamp monitor starting
2020-04-11T08:42:05.627+1000 I  CONTROL  [initandlisten] 
2020-04-11T08:42:05.627+1000 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2020-04-11T08:42:05.627+1000 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2020-04-11T08:42:05.773+1000 I  CONTROL  [initandlisten] 
2020-04-11T08:42:10.305+1000 I  STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: 5c886b6c-037a-4363-a8f7-e7ed27331600 and options: { uuid: UUID("5c886b6c-037a-4363-a8f7-e7ed27331600") }
2020-04-11T08:42:14.937+1000 I  INDEX    [initandlisten] index build: done building index _id_ on ns admin.system.version
2020-04-11T08:42:16.554+1000 I  SHARDING [initandlisten] Marking collection admin.system.version as collection version: <unsharded>
2020-04-11T08:42:16.636+1000 I  COMMAND  [initandlisten] setting featureCompatibilityVersion to 4.2
2020-04-11T08:42:17.084+1000 I  SHARDING [initandlisten] Marking collection local.system.replset as collection version: <unsharded>
2020-04-11T08:42:18.356+1000 I  STORAGE  [initandlisten] Flow Control is enabled on this deployment.
2020-04-11T08:42:19.196+1000 I  SHARDING [initandlisten] Marking collection admin.system.roles as collection version: <unsharded>
2020-04-11T08:42:19.717+1000 I  COMMAND  [initandlisten] command admin.system.roles command: find { find: "system.roles", $db: "admin" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:107 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 591ms
2020-04-11T08:42:20.014+1000 I  STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: 4d9f2780-270a-46b2-859b-25bcae547d18 and options: { capped: true, size: 10485760 }
2020-04-11T08:42:21.558+1000 I  INDEX    [initandlisten] index build: done building index _id_ on ns local.startup_log
2020-04-11T08:42:21.559+1000 I  SHARDING [initandlisten] Marking collection local.startup_log as collection version: <unsharded>
2020-04-11T08:42:40.846+1000 I  FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/React/MongoDB/Server/4.2/data/diagnostic.data'
2020-04-11T08:42:41.125+1000 I  SHARDING [LogicalSessionCacheReap] Marking collection config.system.sessions as collection version: <unsharded>
2020-04-11T08:42:41.260+1000 I  SHARDING [ftdc] Marking collection local.oplog.rs as collection version: <unsharded>
2020-04-11T08:42:41.391+1000 I  NETWORK  [listener] Listening on 127.0.0.1
2020-04-11T08:42:41.391+1000 I  NETWORK  [listener] waiting for connections on port 27017
2020-04-11T08:42:41.393+1000 I  STORAGE  [initandlisten] Service running
2020-04-11T08:42:41.640+1000 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 ok:0 errMsg:"ns does not exist: config.system.sessions" errName:NamespaceNotFound errCode:26 reslen:134 locks:{ ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { r: 2 } }, Database: { acquireCount: { r: 2 } }, Collection: { acquireCount: { r: 1 } } } protocol:op_msg 558ms
2020-04-11T08:42:41.640+1000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 ok:0 errMsg:"ns does not exist: config.system.sessions" errName:NamespaceNotFound errCode:26 reslen:134 locks:{ ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { r: 2 } }, Database: { acquireCount: { r: 2 } }, Collection: { acquireCount: { r: 1 } } } protocol:op_msg 558ms
2020-04-11T08:42:41.640+1000 I  CONTROL  [LogicalSessionCacheReap] Sessions collection is not set up; waiting until next sessions reap interval: config.system.sessions does not exist
2020-04-11T08:42:41.844+1000 I  STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with provided UUID: 3716fea8-fdc8-4763-aa9f-784680f9751c and options: { uuid: UUID("3716fea8-fdc8-4763-aa9f-784680f9751c") }
2020-04-11T08:42:42.463+1000 I  INDEX    [LogicalSessionCacheRefresh] index build: done building index _id_ on ns config.system.sessions
2020-04-11T08:42:43.028+1000 I  INDEX    [LogicalSessionCacheRefresh] index build: starting on config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 } using method: Hybrid
2020-04-11T08:42:43.029+1000 I  INDEX    [LogicalSessionCacheRefresh] build may temporarily use up to 200 megabytes of RAM
2020-04-11T08:42:43.086+1000 I  INDEX    [LogicalSessionCacheRefresh] index build: collection scan done. scanned 0 total records in 0 seconds
2020-04-11T08:42:43.231+1000 I  INDEX    [LogicalSessionCacheRefresh] index build: inserted 0 keys from external sorter into index in 0 seconds
2020-04-11T08:42:43.613+1000 I  INDEX    [LogicalSessionCacheRefresh] index build: done building index lsidTTLIndex on ns config.system.sessions
2020-04-11T08:42:43.755+1000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: createIndexes { createIndexes: "system.sessions", indexes: [ { key: { lastUse: 1 }, name: "lsidTTLIndex", expireAfterSeconds: 1800 } ], $db: "config" } numYields:0 reslen:114 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 2 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { r: 1, w: 2 } }, Database: { acquireCount: { r: 1, w: 2, W: 1 } }, Collection: { acquireCount: { r: 4, w: 1, R: 1, W: 2 } }, Mutex: { acquireCount: { r: 3 } } } flowControl:{ acquireCount: 1, timeAcquiringMicros: 4 } storage:{} protocol:op_msg 2114ms
2020-04-11T08:47:41.063+1000 I  SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: <unsharded>
2020-04-11T10:23:01.678+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:58675 #1 (1 connection now open)
2020-04-11T10:23:01.706+1000 I  NETWORK  [conn1] received client metadata from 127.0.0.1:58675 conn1: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T10:23:01.967+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:58676 #2 (2 connections now open)
2020-04-11T10:23:01.968+1000 I  NETWORK  [conn2] received client metadata from 127.0.0.1:58676 conn2: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T10:27:44.307+1000 I  WRITE    [LogicalSessionCacheRefresh] update config.system.sessions command: { q: { _id: { id: UUID("f0703407-2907-4d59-9270-2dc578e2dee0"), uid: BinData(0, E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855) } }, u: { $currentDate: { lastUse: true } }, multi: false, upsert: true } planSummary: IDHACK keysExamined:0 docsExamined:0 nMatched:0 nModified:0 upsert:1 keysInserted:2 numYields:0 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 1 } }, ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { w: 1 } }, Database: { acquireCount: { w: 1 } }, Collection: { acquireCount: { w: 1 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 1, timeAcquiringMicros: 6 } storage:{} 751ms
2020-04-11T10:27:44.308+1000 I  COMMAND  [LogicalSessionCacheRefresh] command config.$cmd command: update { update: "system.sessions", ordered: false, allowImplicitCollectionCreation: false, writeConcern: { w: "majority", wtimeout: 15000 }, $db: "config" } numYields:0 reslen:171 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 2 } }, ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { w: 1 } }, Collection: { acquireCount: { w: 1 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 1, timeAcquiringMicros: 6 } storage:{} protocol:op_msg 926ms
2020-04-11T10:37:58.518+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:58866 #3 (3 connections now open)
2020-04-11T10:37:58.556+1000 I  NETWORK  [conn3] received client metadata from 127.0.0.1:58866 conn3: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T10:52:47.578+1000 I  NETWORK  [conn3] end connection 127.0.0.1:58866 (2 connections now open)
2020-04-11T10:53:26.233+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59031 #4 (3 connections now open)
2020-04-11T10:53:26.250+1000 I  NETWORK  [conn4] received client metadata from 127.0.0.1:59031 conn4: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T10:53:26.569+1000 I  SHARDING [conn4] Marking collection myorganizer.users as collection version: <unsharded>
2020-04-11T10:53:26.569+1000 I  STORAGE  [conn4] createCollection: myorganizer.users with generated UUID: 31683211-13f7-4f81-9a40-dea98f4b72ed and options: {}
2020-04-11T10:53:26.758+1000 I  INDEX    [conn4] index build: done building index _id_ on ns myorganizer.users
2020-04-11T10:53:26.761+1000 I  COMMAND  [conn4] command myorganizer.users command: insert { insert: "users", documents: 2, ordered: true, lsid: { id: UUID("67b0824d-822f-4716-b767-099a041d3395") }, $db: "myorganizer" } ninserted:2 keysInserted:2 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 4 } }, ReplicationStateTransition: { acquireCount: { w: 4 } }, Global: { acquireCount: { w: 4 } }, Database: { acquireCount: { w: 3, W: 1 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 4 } } } flowControl:{ acquireCount: 4, timeAcquiringMicros: 10 } storage:{} protocol:op_msg 244ms
2020-04-11T10:53:26.773+1000 I  SHARDING [conn4] Marking collection myorganizer.groups as collection version: <unsharded>
2020-04-11T10:53:26.773+1000 I  STORAGE  [conn4] createCollection: myorganizer.groups with generated UUID: da1221b0-d1b8-4c7e-b808-a144652d7d89 and options: {}
2020-04-11T10:53:26.980+1000 I  INDEX    [conn4] index build: done building index _id_ on ns myorganizer.groups
2020-04-11T10:53:26.981+1000 I  COMMAND  [conn4] command myorganizer.groups command: insert { insert: "groups", documents: 3, ordered: true, lsid: { id: UUID("67b0824d-822f-4716-b767-099a041d3395") }, $db: "myorganizer" } ninserted:3 keysInserted:3 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 7 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 6 } storage:{} protocol:op_msg 207ms
2020-04-11T10:53:26.985+1000 I  SHARDING [conn4] Marking collection myorganizer.tasks as collection version: <unsharded>
2020-04-11T10:53:26.985+1000 I  STORAGE  [conn4] createCollection: myorganizer.tasks with generated UUID: d2b85e69-4c20-4a81-bf35-5e808dc7b6ce and options: {}
2020-04-11T10:53:27.235+1000 I  INDEX    [conn4] index build: done building index _id_ on ns myorganizer.tasks
2020-04-11T10:53:27.236+1000 I  COMMAND  [conn4] command myorganizer.tasks command: insert { insert: "tasks", documents: 5, ordered: true, lsid: { id: UUID("67b0824d-822f-4716-b767-099a041d3395") }, $db: "myorganizer" } ninserted:5 keysInserted:5 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 9 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 4 } storage:{} protocol:op_msg 251ms
2020-04-11T10:53:27.239+1000 I  SHARDING [conn4] Marking collection myorganizer.comments as collection version: <unsharded>
2020-04-11T10:53:27.240+1000 I  STORAGE  [conn4] createCollection: myorganizer.comments with generated UUID: ac07641d-d2ec-4217-8064-dd395f4729a4 and options: {}
2020-04-11T10:53:27.479+1000 I  INDEX    [conn4] index build: done building index _id_ on ns myorganizer.comments
2020-04-11T10:53:27.480+1000 I  COMMAND  [conn4] command myorganizer.comments command: insert { insert: "comments", documents: [ { owner: "U1", id: "C1", task: "T1", content: "Great work!", _id: ObjectId('5e91150765fcde1be00cde8c') } ], ordered: true, lsid: { id: UUID("67b0824d-822f-4716-b767-099a041d3395") }, $db: "myorganizer" } ninserted:1 keysInserted:1 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 5 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 7 } storage:{} protocol:op_msg 240ms
2020-04-11T10:53:57.972+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59036 #5 (4 connections now open)
2020-04-11T10:53:57.973+1000 I  NETWORK  [conn5] received client metadata from 127.0.0.1:59036 conn5: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T10:53:58.153+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59037 #6 (5 connections now open)
2020-04-11T10:53:58.164+1000 I  NETWORK  [conn6] received client metadata from 127.0.0.1:59037 conn6: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T10:54:03.845+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59038 #7 (6 connections now open)
2020-04-11T10:54:03.846+1000 I  NETWORK  [conn7] received client metadata from 127.0.0.1:59038 conn7: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T10:54:04.029+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59039 #8 (7 connections now open)
2020-04-11T10:54:04.030+1000 I  NETWORK  [conn8] received client metadata from 127.0.0.1:59039 conn8: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T11:31:56.690+1000 I  NETWORK  [conn4] end connection 127.0.0.1:59031 (6 connections now open)
2020-04-11T11:32:25.554+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59334 #9 (7 connections now open)
2020-04-11T11:32:25.556+1000 I  NETWORK  [conn9] received client metadata from 127.0.0.1:59334 conn9: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T11:50:04.894+1000 I  NETWORK  [conn9] end connection 127.0.0.1:59334 (6 connections now open)
2020-04-11T11:50:18.822+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59466 #10 (7 connections now open)
2020-04-11T11:50:18.840+1000 I  NETWORK  [conn10] received client metadata from 127.0.0.1:59466 conn10: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T11:50:19.139+1000 I  WRITE    [conn10] update myorganizer.tasks command: { q: { id: "12345" }, u: { $set: { name: "My task - UPDATE!!!!" } }, multi: false, upsert: false } planSummary: COLLSCAN keysExamined:0 docsExamined:6 nMatched:1 nModified:1 numYields:2 queryHash:6DAB46EC planCacheKey:6DAB46EC locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { w: 3 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 11 } storage:{} 129ms
2020-04-11T11:50:19.140+1000 I  COMMAND  [conn10] command myorganizer.$cmd command: update { update: "tasks", updates: [ { q: { id: "12345" }, u: { $set: { name: "My task - UPDATE!!!!" } }, upsert: false, multi: false } ], ordered: true, lsid: { id: UUID("dbcc5ff4-e488-4186-bdfb-15f62a64e12d") }, $db: "myorganizer" } numYields:2 reslen:60 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 4 } }, ReplicationStateTransition: { acquireCount: { w: 4 } }, Global: { acquireCount: { r: 1, w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { w: 3 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 11 } storage:{} protocol:op_msg 150ms
2020-04-11T11:50:52.744+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59468 #11 (8 connections now open)
2020-04-11T11:50:52.746+1000 I  NETWORK  [conn11] received client metadata from 127.0.0.1:59468 conn11: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T11:50:52.935+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59469 #12 (9 connections now open)
2020-04-11T11:50:52.961+1000 I  NETWORK  [conn12] received client metadata from 127.0.0.1:59469 conn12: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T11:51:30.793+1000 I  NETWORK  [conn10] end connection 127.0.0.1:59466 (8 connections now open)
2020-04-11T11:52:01.582+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59472 #13 (9 connections now open)
2020-04-11T11:52:01.597+1000 I  NETWORK  [conn13] received client metadata from 127.0.0.1:59472 conn13: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T11:52:53.511+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59477 #14 (10 connections now open)
2020-04-11T11:52:53.512+1000 I  NETWORK  [conn14] received client metadata from 127.0.0.1:59477 conn14: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T11:52:53.693+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:59478 #15 (11 connections now open)
2020-04-11T11:52:53.694+1000 I  NETWORK  [conn15] received client metadata from 127.0.0.1:59478 conn15: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T11:59:29.750+1000 I  NETWORK  [conn13] end connection 127.0.0.1:59472 (10 connections now open)
2020-04-11T12:30:54.743+1000 I  NETWORK  [conn14] end connection 127.0.0.1:59477 (9 connections now open)
2020-04-11T12:30:55.103+1000 I  NETWORK  [conn15] end connection 127.0.0.1:59478 (8 connections now open)
2020-04-11T12:30:55.862+1000 I  NETWORK  [conn11] end connection 127.0.0.1:59468 (7 connections now open)
2020-04-11T12:30:55.884+1000 I  NETWORK  [conn12] end connection 127.0.0.1:59469 (6 connections now open)
2020-04-11T12:30:58.092+1000 I  NETWORK  [conn7] end connection 127.0.0.1:59038 (5 connections now open)
2020-04-11T12:30:58.298+1000 I  NETWORK  [conn5] end connection 127.0.0.1:59036 (4 connections now open)
2020-04-11T12:30:58.300+1000 I  NETWORK  [conn8] end connection 127.0.0.1:59039 (3 connections now open)
2020-04-11T12:30:58.509+1000 I  NETWORK  [conn6] end connection 127.0.0.1:59037 (2 connections now open)
2020-04-11T12:31:03.374+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60053 #16 (3 connections now open)
2020-04-11T12:31:03.375+1000 I  NETWORK  [conn16] received client metadata from 127.0.0.1:60053 conn16: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:31:03.625+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60054 #17 (4 connections now open)
2020-04-11T12:31:03.626+1000 I  NETWORK  [conn17] received client metadata from 127.0.0.1:60054 conn17: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:36:56.254+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60302 #18 (5 connections now open)
2020-04-11T12:36:56.269+1000 I  NETWORK  [conn18] received client metadata from 127.0.0.1:60302 conn18: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T12:48:57.669+1000 I  NETWORK  [conn16] end connection 127.0.0.1:60053 (4 connections now open)
2020-04-11T12:48:57.674+1000 I  NETWORK  [conn17] end connection 127.0.0.1:60054 (3 connections now open)
2020-04-11T12:48:59.438+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60819 #19 (4 connections now open)
2020-04-11T12:48:59.439+1000 I  NETWORK  [conn19] received client metadata from 127.0.0.1:60819 conn19: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:48:59.633+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60820 #20 (5 connections now open)
2020-04-11T12:48:59.634+1000 I  NETWORK  [conn20] received client metadata from 127.0.0.1:60820 conn20: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:53:57.541+1000 I  NETWORK  [conn19] end connection 127.0.0.1:60819 (4 connections now open)
2020-04-11T12:53:57.547+1000 I  NETWORK  [conn20] end connection 127.0.0.1:60820 (3 connections now open)
2020-04-11T12:53:59.877+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60999 #21 (4 connections now open)
2020-04-11T12:53:59.878+1000 I  NETWORK  [conn21] received client metadata from 127.0.0.1:60999 conn21: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:54:00.092+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61000 #22 (5 connections now open)
2020-04-11T12:54:00.093+1000 I  NETWORK  [conn22] received client metadata from 127.0.0.1:61000 conn22: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:56:26.418+1000 I  NETWORK  [conn18] end connection 127.0.0.1:60302 (4 connections now open)
2020-04-11T12:56:59.257+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61108 #23 (5 connections now open)
2020-04-11T12:56:59.258+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61109 #24 (6 connections now open)
2020-04-11T12:56:59.272+1000 I  NETWORK  [conn23] received client metadata from 127.0.0.1:61108 conn23: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T12:56:59.274+1000 I  NETWORK  [conn24] received client metadata from 127.0.0.1:61109 conn24: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T12:57:54.981+1000 I  NETWORK  [conn21] end connection 127.0.0.1:60999 (5 connections now open)
2020-04-11T12:57:54.985+1000 I  NETWORK  [conn22] end connection 127.0.0.1:61000 (4 connections now open)
2020-04-11T12:57:57.107+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61139 #25 (5 connections now open)
2020-04-11T12:57:57.108+1000 I  NETWORK  [conn25] received client metadata from 127.0.0.1:61139 conn25: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T12:57:57.307+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61140 #26 (6 connections now open)
2020-04-11T12:57:57.308+1000 I  NETWORK  [conn26] received client metadata from 127.0.0.1:61140 conn26: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-11T13:00:41.927+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61246 #27 (7 connections now open)
2020-04-11T13:00:41.933+1000 I  NETWORK  [conn27] received client metadata from 127.0.0.1:61246 conn27: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T13:10:46.026+1000 I  NETWORK  [conn23] end connection 127.0.0.1:61108 (6 connections now open)
2020-04-11T13:10:46.028+1000 I  NETWORK  [conn24] end connection 127.0.0.1:61109 (5 connections now open)
2020-04-11T13:10:46.028+1000 I  NETWORK  [conn27] end connection 127.0.0.1:61246 (4 connections now open)
2020-04-11T13:15:43.170+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:61914 #28 (5 connections now open)
2020-04-11T13:15:43.187+1000 I  NETWORK  [conn28] received client metadata from 127.0.0.1:61914 conn28: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-11T15:19:46.602+1000 I  COMMAND  [LogicalSessionCacheReap] command config.transactions command: find { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1586580586332) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:108 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 268ms
2020-04-11T15:19:47.822+1000 I  WRITE    [LogicalSessionCacheRefresh] update config.system.sessions command: { q: { _id: { id: UUID("aef319ab-c337-46b4-9cac-5616858a4d6a"), uid: BinData(0, E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855) } }, u: { $currentDate: { lastUse: true } }, multi: false, upsert: true } planSummary: IDHACK keysExamined:1 docsExamined:1 nMatched:1 nModified:1 keysInserted:1 keysDeleted:1 numYields:1 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 2 } }, ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { w: 2 } }, Database: { acquireCount: { w: 2 } }, Collection: { acquireCount: { w: 2 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 2, timeAcquiringMicros: 5 } storage:{} 569ms
2020-04-11T15:19:47.823+1000 I  COMMAND  [LogicalSessionCacheRefresh] command config.$cmd command: update { update: "system.sessions", ordered: false, allowImplicitCollectionCreation: false, writeConcern: { w: "majority", wtimeout: 15000 }, $db: "config" } numYields:1 reslen:267 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 5 } }, ReplicationStateTransition: { acquireCount: { w: 5 } }, Global: { acquireCount: { r: 1, w: 4 } }, Database: { acquireCount: { w: 4 } }, Collection: { acquireCount: { w: 4 } }, Mutex: { acquireCount: { r: 6 } } } flowControl:{ acquireCount: 4, timeAcquiringMicros: 10 } storage:{} protocol:op_msg 1491ms
2020-04-11T15:52:46.275+1000 I  NETWORK  [conn28] end connection 127.0.0.1:61914 (4 connections now open)
2020-04-11T23:44:43.499+1000 I  WRITE    [LogicalSessionCacheRefresh] update config.system.sessions command: { q: { _id: { id: UUID("f0703407-2907-4d59-9270-2dc578e2dee0"), uid: BinData(0, E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855) } }, u: { $currentDate: { lastUse: true } }, multi: false, upsert: true } planSummary: IDHACK keysExamined:0 docsExamined:0 nMatched:0 nModified:0 upsert:1 keysInserted:2 numYields:0 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 1 } }, ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { w: 1 } }, Database: { acquireCount: { w: 1 } }, Collection: { acquireCount: { w: 1 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 1, timeAcquiringMicros: 2 } storage:{} 103ms
2020-04-11T23:44:44.529+1000 I  WRITE    [LogicalSessionCacheRefresh] update config.system.sessions command: { q: { _id: { id: UUID("d7a3e7a2-3d3c-44d8-86c0-ca4bd7b418be"), uid: BinData(0, E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855) } }, u: { $currentDate: { lastUse: true } }, multi: false, upsert: true } planSummary: IDHACK keysExamined:0 docsExamined:0 nMatched:0 nModified:0 upsert:1 keysInserted:2 numYields:0 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 1 } }, ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { w: 1 } }, Database: { acquireCount: { w: 1 } }, Collection: { acquireCount: { w: 1 } }, Mutex: { acquireCount: { r: 2 } } } flowControl:{ acquireCount: 2, timeAcquiringMicros: 11 } storage:{} 132ms
2020-04-11T23:44:44.529+1000 I  COMMAND  [LogicalSessionCacheRefresh] command config.$cmd command: update { update: "system.sessions", ordered: false, allowImplicitCollectionCreation: false, writeConcern: { w: "majority", wtimeout: 15000 }, $db: "config" } numYields:0 reslen:267 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 4 } }, ReplicationStateTransition: { acquireCount: { w: 4 } }, Global: { acquireCount: { r: 2, w: 2 } }, Database: { acquireCount: { w: 2 } }, Collection: { acquireCount: { w: 2 } }, Mutex: { acquireCount: { r: 4 } } } flowControl:{ acquireCount: 2, timeAcquiringMicros: 11 } storage:{} protocol:op_msg 1195ms
2020-04-12T11:36:49.349+1000 I  COMMAND  [conn1] dropDatabase myorganizer - starting
2020-04-12T11:36:49.418+1000 I  COMMAND  [conn1] dropDatabase myorganizer - dropping collection: myorganizer.users
2020-04-12T11:36:49.418+1000 I  COMMAND  [conn1] dropDatabase myorganizer - dropping collection: myorganizer.comments
2020-04-12T11:36:49.418+1000 I  COMMAND  [conn1] dropDatabase myorganizer - dropping collection: myorganizer.tasks
2020-04-12T11:36:49.419+1000 I  COMMAND  [conn1] dropDatabase myorganizer - dropping collection: myorganizer.groups
2020-04-12T11:36:51.154+1000 I  COMMAND  [conn1] dropDatabase myorganizer - dropped 4 collection(s)
2020-04-12T11:36:51.155+1000 I  COMMAND  [conn1] dropDatabase myorganizer - finished
2020-04-12T11:36:51.177+1000 I  COMMAND  [conn1] command myorganizer appName: "robo3t" command: dropDatabase { dropDatabase: 1, writeConcern: { w: 0, wtimeout: 0 }, $db: "myorganizer" } numYields:0 reslen:63 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 1 } }, ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } }, Mutex: { acquireCount: { r: 1 } } } flowControl:{ acquireCount: 1, timeAcquiringMicros: 5 } storage:{} protocol:op_msg 1823ms
2020-04-12T11:41:35.277+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:57617 #29 (5 connections now open)
2020-04-12T11:41:35.335+1000 I  NETWORK  [conn29] received client metadata from 127.0.0.1:57617 conn29: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-12T11:41:35.988+1000 I  STORAGE  [conn29] createCollection: myorganizer.users with generated UUID: d93fee2f-bebe-409c-ad5b-6adea371c001 and options: {}
2020-04-12T11:41:36.598+1000 I  INDEX    [conn29] index build: done building index _id_ on ns myorganizer.users
2020-04-12T11:41:36.632+1000 I  COMMAND  [conn29] command myorganizer.users command: insert { insert: "users", documents: 2, ordered: true, lsid: { id: UUID("c5c375fe-9612-48e5-823e-bf553022f06e") }, $db: "myorganizer" } ninserted:2 keysInserted:2 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 4 } }, ReplicationStateTransition: { acquireCount: { w: 4 } }, Global: { acquireCount: { w: 4 } }, Database: { acquireCount: { w: 3, W: 1 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 4 } } } flowControl:{ acquireCount: 4, timeAcquiringMicros: 9 } storage:{} protocol:op_msg 630ms
2020-04-12T11:41:36.669+1000 I  STORAGE  [conn29] createCollection: myorganizer.groups with generated UUID: 9d2b9719-39c1-400a-9f58-f12e9dc6907b and options: {}
2020-04-12T11:41:36.874+1000 I  INDEX    [conn29] index build: done building index _id_ on ns myorganizer.groups
2020-04-12T11:41:36.887+1000 I  COMMAND  [conn29] command myorganizer.groups command: insert { insert: "groups", documents: 3, ordered: true, lsid: { id: UUID("c5c375fe-9612-48e5-823e-bf553022f06e") }, $db: "myorganizer" } ninserted:3 keysInserted:3 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 7 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 8 } storage:{} protocol:op_msg 234ms
2020-04-12T11:41:36.893+1000 I  STORAGE  [conn29] createCollection: myorganizer.tasks with generated UUID: 7e4140b1-13fb-4a63-bed0-8a47ec9e7310 and options: {}
2020-04-12T11:41:37.128+1000 I  INDEX    [conn29] index build: done building index _id_ on ns myorganizer.tasks
2020-04-12T11:41:37.130+1000 I  COMMAND  [conn29] command myorganizer.tasks command: insert { insert: "tasks", documents: 5, ordered: true, lsid: { id: UUID("c5c375fe-9612-48e5-823e-bf553022f06e") }, $db: "myorganizer" } ninserted:5 keysInserted:5 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 9 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 10 } storage:{} protocol:op_msg 237ms
2020-04-12T11:41:37.135+1000 I  STORAGE  [conn29] createCollection: myorganizer.comments with generated UUID: 104c6e45-50eb-4499-a1bf-68dae8b32c85 and options: {}
2020-04-12T11:41:37.406+1000 I  INDEX    [conn29] index build: done building index _id_ on ns myorganizer.comments
2020-04-12T11:41:37.407+1000 I  COMMAND  [conn29] command myorganizer.comments command: insert { insert: "comments", documents: [ { owner: "U1", id: "C1", task: "T1", content: "Great work!", _id: ObjectId('5e9271d1c082a62f24857b91') } ], ordered: true, lsid: { id: UUID("c5c375fe-9612-48e5-823e-bf553022f06e") }, $db: "myorganizer" } ninserted:1 keysInserted:1 numYields:0 reslen:45 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 3 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { w: 3 } }, Database: { acquireCount: { w: 3 } }, Collection: { acquireCount: { r: 2, w: 2, W: 1 } }, Mutex: { acquireCount: { r: 5 } } } flowControl:{ acquireCount: 3, timeAcquiringMicros: 45 } storage:{} protocol:op_msg 272ms
2020-04-12T11:42:12.500+1000 I  SHARDING [conn1] Marking collection admin.system.users as collection version: <unsharded>
2020-04-12T11:42:12.744+1000 I  COMMAND  [conn1] command admin.system.users appName: "robo3t" command: usersInfo { usersInfo: 1, $db: "myorganizer" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:50 locks:{ ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { r: 2 } }, Database: { acquireCount: { r: 2 } }, Collection: { acquireCount: { r: 4 } }, Mutex: { acquireCount: { r: 2 } } } protocol:op_msg 378ms
2020-04-12T11:42:21.169+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:57640 #30 (6 connections now open)
2020-04-12T11:42:21.199+1000 I  NETWORK  [conn30] received client metadata from 127.0.0.1:57640 conn30: { application: { name: "robo3t" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-12T11:42:22.266+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:57641 #31 (7 connections now open)
2020-04-12T11:42:22.303+1000 I  NETWORK  [conn31] received client metadata from 127.0.0.1:57641 conn31: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.5-17-gd808df2233" }, os: { type: "Windows", name: "Microsoft Windows 8", architecture: "x86_64", version: "6.2 (build 9200)" } }
2020-04-12T12:47:46.826+1000 I  NETWORK  [conn29] end connection 127.0.0.1:57617 (6 connections now open)
2020-04-12T12:48:34.173+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:60336 #32 (7 connections now open)
2020-04-12T12:48:34.221+1000 I  NETWORK  [conn32] received client metadata from 127.0.0.1:60336 conn32: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
2020-04-13T08:49:40.831+1000 I  NETWORK  [conn32] end connection 127.0.0.1:60336 (6 connections now open)
2020-04-13T08:50:22.967+1000 I  NETWORK  [listener] connection accepted from 127.0.0.1:57793 #33 (7 connections now open)
2020-04-13T08:50:22.993+1000 I  NETWORK  [conn33] received client metadata from 127.0.0.1:57793 conn33: { driver: { name: "nodejs", version: "3.5.5" }, os: { type: "Windows_NT", name: "win32", architecture: "x64", version: "10.0.18362" }, platform: "'Node.js v8.11.1, LE (legacy)" }
